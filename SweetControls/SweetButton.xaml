<Button x:Class="SweetControls.SweetButton"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:System="clr-namespace:System;assembly=mscorlib"
        mc:Ignorable="d" x:Name="main"
        BorderBrush="Black"
        d:DesignHeight="450" d:DesignWidth="800">
    <Button.Style>
        <Style TargetType="{x:Type Button}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <ContentPresenter/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Button.Style>

    <Button.Resources>
        <Storyboard x:Key="SqueezeAnimation">
            <DoubleAnimation Storyboard.TargetName="border"
                             Storyboard.TargetProperty="Width"
                             DecelerationRatio="0.6"
                             Duration="0:0:0.5"
                             From="{Binding ElementName=border, Path=Width}"
                             Completed="SqueezeAnimation_Completed"/>
            <DoubleAnimation Storyboard.TargetName="border"
                             Storyboard.TargetProperty="Opacity"
                             BeginTime="0:0:0.5"
                             Duration="0:0:0.1"
                             From="1.0"
                             To="0"/>
            <DoubleAnimation Storyboard.TargetName="ellipse"
                             Storyboard.TargetProperty="Opacity"
                             BeginTime="0:0:0.5"
                             Duration="0:0:0.1"
                             From="0"
                             To="1.0"/>
        </Storyboard>
        <Storyboard x:Key="ToIdleAnimation">
            <DoubleAnimation Storyboard.TargetName="border"
                             Storyboard.TargetProperty="Width"
                             DecelerationRatio="0.6"
                             BeginTime="0:0:0.1"
                             Duration="0:0:0.5"
                             From="{Binding ElementName=border, Path=Width}"/>
            <DoubleAnimation Storyboard.TargetName="border"
                             Storyboard.TargetProperty="Opacity"
                             Duration="0:0:0.1"
                             From="0"
                             To="1.0"/>
            <DoubleAnimation Storyboard.TargetName="ellipse"
                             Storyboard.TargetProperty="Opacity"
                             Duration="0:0:0.1"
                             From="1.5"
                             To="0"/>
        </Storyboard>
        <Storyboard x:Key="ShowContentAnimation">
            <DoubleAnimation Storyboard.TargetName="iconGradientFillTransparent"
                             Storyboard.TargetProperty="Offset"
                             Duration="0:0:1.5"
                             From="0"
                             To="10.0"/>
        </Storyboard>
    </Button.Resources>

    <Grid>
        <!--Deleted-->
        <!--Background="{Binding Path=Background, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Button}}}"-->
        <Border BorderBrush="{Binding Path=BorderBrush, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Button}}}"
                BorderThickness="{Binding Path=BorderThickness, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Button}}}"
                CornerRadius="{Binding Path=CornerRadius, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Button}}}"
                Background="{Binding Path=Background, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Button}}}"
                x:Name="border">
            <TextBlock Text="{Binding Path=Text, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Button}}}"
                       Foreground="{Binding Path=Foreground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Button}}}"
                       FontSize="{Binding Path=FontSize, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Button}}}"
                       FontFamily="{Binding Path=FontFamily, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Button}}}"
                       FontStretch="{Binding Path=FontStretch, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Button}}}"
                       FontStyle="{Binding Path=FontStyle, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Button}}}"
                       FontWeight="{Binding Path=FontWeight, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Button}}}"
                       HorizontalAlignment="{Binding Path=HorizontalContentAlignment, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Button}}}"
                       VerticalAlignment="{Binding Path=VerticalContentAlignment, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Button}}}"
                       x:Name="text"/>
        </Border>

        <Ellipse Width="{Binding Path=SqueezeSize, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Button}}}"
                 Height="{Binding Path=Height, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Button}}}"
                 Stroke="{Binding Path=BorderBrush, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Button}}}"
                 StrokeThickness="{Binding Path=BorderThickness, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Button}}}"
                 Opacity="0"
                 StrokeDashCap="Round"
                 x:Name="ellipse"
                 RenderTransformOrigin="0.5,0.5">
            <Ellipse.RenderTransform>
                <TransformGroup>
                    <ScaleTransform ScaleY="1" ScaleX="-1"/>
                    <SkewTransform AngleY="0" AngleX="0"/>
                    <RotateTransform Angle="90"/>
                    <TranslateTransform/>
                </TransformGroup>
            </Ellipse.RenderTransform>
        </Ellipse>

        <!-- Fill="{Binding Path=BorderBrush, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Button}}}" -->
        <!-- Stroke="{Binding Path=BorderBrush, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Button}}}" -->
        <Path
              HorizontalAlignment="Center"
              VerticalAlignment="Center"
              x:Name="checkIcon"
              Stretch="Uniform"
              Data="M506.231,75.508c-7.689-7.69-20.158-7.69-27.849,0l-319.21,319.211L33.617,269.163c-7.689-7.691-20.158-7.691-27.849,0
			c-7.69,7.69-7.69,20.158,0,27.849l139.481,139.481c7.687,7.687,20.16,7.689,27.849,0l333.133-333.136
			C513.921,95.666,513.921,83.198,506.231,75.508z" RenderTransformOrigin="0.5,0.5">
            <Path.Fill>
                <LinearGradientBrush EndPoint="0.5,1" MappingMode="RelativeToBoundingBox" StartPoint="0.5,0">
                    <LinearGradientBrush.RelativeTransform>
                        <TransformGroup>
                            <ScaleTransform CenterY="0.5" CenterX="0.5" ScaleY="1" ScaleX="-1"/>
                            <SkewTransform AngleY="0" AngleX="0" CenterY="0.5" CenterX="0.5"/>
                            <RotateTransform Angle="-90" CenterY="0.5" CenterX="0.5"/>
                            <TranslateTransform/>
                        </TransformGroup>
                    </LinearGradientBrush.RelativeTransform>
                    <GradientStop Color="White" Offset="0"/>
                    <GradientStop Color="Transparent" Offset="0" x:Name="iconGradientFillTransparent"/>
                </LinearGradientBrush>
            </Path.Fill>
        </Path>
    </Grid>
</Button>
